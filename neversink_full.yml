simulation:
  sim_name: mfsim
  sim_ws: ./neversink_mf6
  version: mf6
model:
  external_path: ./
  modelname: neversink
  options:
    newton: true
    newton_under_relaxation: true 
    perimeter_boundary_type: 'specific head'
    print_input: true
    save_flows: true
  packages: ['dis',
             'ic',
             'npf',
             'oc',         
             'rch',
             #'sfr',  #  building with hi res NHD in setup_sfr.py
             'obs',
             'wel',
             'ims'
  ]
  relative_external_filepaths: true
  simulation: neversink

intermediate_data:
  output_folder: 'original/'  # external arrays are read from here by flopy, and written to external_path

perimeter_boundary:
  source_data:
    irregular_boundary: 
      filename: 'source_data/Shapefiles/Extents/Model_Extent_HUC12.shp'

setup_grid:
  epsg: 5070
  rotation: 0.0
  snap_to_NHG: true
  xoff: 1743735.4876964327 # lower left corner
  yoff: 2258813.8672688426 # lower left corner

parent:
  # argments to flopy.modflow.Modflow.load for parent model
  namefile: 'ngwm_parent.nam'
  model_ws: 'processed_data/merged_parent_output/parent_mf_nwt'
  version: 'mfnwt'
  # information for modflow-setup
  # note: parent model is geo-located in namfile header
  # (only works if length_units='meters')
  headfile: 'processed_data/merged_parent_output/parent_mf_nwt/ngwm_parent.hds'
  hiKlakes_value: 1.e4 # unfortunately python yaml currently requires a dot to parse exp notation as float
  default_source_data: False  # if True, packages and variables that are omitted will be pulled from this model
  copy_stress_periods: 'all' #[0]
  inset_layer_mapping:  # mapping between inset and parent model layers
    0: 0  # inset: parent  (inset layers 1 and 0 copied from parent layer 0)
    1: 0
    2: 0
    3: 0
  start_date_time: '2011-01-01'
  length_units: 'meters'
  time_units: 'days'

dis:
  dimensions:
    ncol: 619
    nlay: 4
    nrow: 680
  drop_thin_cells: true
  griddata:
    delc: 50
    delr: 50

  minimum_layer_thickness: 1
  options:
    length_units: meters
  remake_top: true
  source_data:
    top:
      filename: 'source_data/Shapefiles/top_50m_from_lidar.tif' # DEM file; path relative to setup script
      elevation_units: 'meters'
    botm:
      filenames:
        0: 'source_data/Shapefiles/Layers_and_Zones/L1_Bottom.tif' 
        1: 'source_data/Shapefiles/Layers_and_Zones/L2_Bottom.tif'
        2: 'source_data/Shapefiles/Layers_and_Zones/L3_Bottom___TopOfBedrock.tif'
        3: 'source_data/Shapefiles/Layers_and_Zones/L4_Bottom.tif'
      elevation_units: 'meters'
    idomain:
      filename: source_data/Shapefiles/Extents/Model_Extent_HUC12.shp

tdis:
  options:
    start_date_time: '2011-01-01'

    time_units: days
  perioddata:
    nper: 1
    nstp: 1
    steady: true
    tsmult: 1

ic:
  strt_filename_fmt:  'source_data/Shapefiles/top_50m_from_lidar.tif'

npf:
  options:
    save_flows: True
  griddata:
    icelltype: 1 # variable sat. thickness in all layers
  source_data:
    k:
      filenames:
        0: 'processed_data/Layer1_Kh.tif' 
        1: 'processed_data/Layer2_Kh.tif'  
        2: 'processed_data/Layer3_Kh.tif' 
        3: 'processed_data/Layer4_Kh.tif' 
      length_units: 'meters'
    k33:
      filenames:
        0: 'processed_data/Layer1_Kv.tif' 
        1: 'processed_data/Layer2_Kv.tif'  
        2: 'processed_data/Layer3_Kv.tif' 
        3: 'processed_data/Layer4_Kv.tif'
      length_units: 'meters'
  k_filename_fmt: "k{:d}.dat"
  k33_filename_fmt: "k33{:d}.dat"

rch:
  options:
    print_input: True
    print_flows: False
    save_flows: True
    readasarrays: True
  source_data:
    recharge:
      filenames: 
        0: 'source_data/SWB_Nawqa_mm/SWB_Nawqa_mm.tif'
      length_units: 'millimeters'
      time_units: 'years'


wel:
  options:
    print_input: True
    print_flows: True
    save_flows: True
  source_data:
    csvfiles:
      filenames: ['processed_data/2009-2016_ave_pumping.csv']
      volume_units: 'meters'
      time_units: 'days'
      data_column: 'flux_m3'
      datetime_column: 'start_datetime'
      id_column: 'ID_Well'
      period_stats:  # how fluxes will be distributed across model stress periods
        0: ['mean', '2009-01-01', '2016-01-01']  
      vertical_flux_distribution:
        across_layers: False  # False to put fluxes in one layer
        # put wells in layer with thickest or most transmissive intersection with well open interval
        distribute_by: 'thickness'  # thickness or transmissivity
        minimum_layer_thickness: 10.  # layers must be at 10 length units thick to have a well;
        # (any dropped wells would be recorded in neversink_dropped_wells.csv)

oc:
  budget_fileout_fmt: '{}.cbc'
  head_fileout_fmt: '{}.hds'
  saverecord:
    0:
      budget: last
      head: last

ims:
  options:
    print_option: 'all'
    complexity: 'complex'
    'csv_output fileout': 'solver_out.csv'
  nonlinear:
    outer_hclose: 1.e-2
    outer_rclosebnd: 1.e4
    outer_maximum: 200
    under_relaxation:  'dbd'
    under_relaxation_gamma: 0.0
    under_relaxation_theta: 0.7
    under_relaxation_kappa: 0.1
    under_relaxation_momentum: 0.0
    backtracking_number: 0
  linear:
    inner_maximum: 175
    inner_hclose: 1.e-4
    rcloserecord: [1.0e3, 'strict']
    linear_acceleration: 'bicgstab'
    relaxation_factor: 0.0
    preconditioner_levels: 0
    preconditioner_drop_tolerance: 0.001
    number_orthogonalizations: 0
    scaling_method: None
    reordering_method: None

obs:
  source_data:
    filenames: ['processed_data/NWIS_GW_DV_sites.csv',
                'processed_data/NY_DEC_GW_sites.csv'  
                     ]
    column_mappings:
      obsname: ['obsprefix', 'obsnme']